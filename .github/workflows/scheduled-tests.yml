name: Scheduled Tests & Coverage

on:
  # Run daily at 8:00 AM UTC
  schedule:
    - cron: '0 8 * * *'

  # Also run on push and pull requests for immediate feedback
  push:
    branches: [ main, feat/* ]

  pull_request:
    branches: [ main ]

  # Allow manual trigger
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    name: Test on ${{ matrix.os }} with Go ${{ matrix.go-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.23', '1.24']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Run tests with coverage
      run: go test -v -race -covermode=atomic -coverprofile=coverage.out ./...

    - name: Display coverage summary
      run: go tool cover -func=coverage.out

    - name: Check coverage threshold
      if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.24'
      run: |
        COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
        echo "Total coverage: ${COVERAGE}%"
        if (( $(echo "$COVERAGE < 20" | bc -l) )); then
          echo "❌ Coverage is below 20% threshold"
          exit 1
        else
          echo "✅ Coverage meets 20% threshold"
        fi

    - name: Generate HTML coverage report
      if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.24'
      run: go tool cover -html=coverage.out -o coverage.html

    - name: Upload coverage report as artifact
      if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.24'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ github.sha }}
        path: |
          coverage.out
          coverage.html
        retention-days: 30

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.24'
      uses: codecov/codecov-action@v4
      with:
        files: ./coverage.out
        flags: unittests
        name: codecov-${{ matrix.os }}-go${{ matrix.go-version }}
        fail_ci_if_error: false
        verbose: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest
        args: --timeout=5m

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: always()

    steps:
    - name: Check test results
      run: |
        if [ "${{ needs.test.result }}" == "failure" ]; then
          echo "❌ Tests failed"
          exit 1
        elif [ "${{ needs.lint.result }}" == "failure" ]; then
          echo "⚠️ Linting failed"
          exit 1
        else
          echo "✅ All tests and linting passed"
        fi

    - name: Post summary
      if: always()
      run: |
        echo "## Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Tests**: ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Lint**: ${{ needs.lint.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ "${{ github.event_name }}" == "schedule" ]; then
          echo "📅 Triggered by: Daily scheduled run" >> $GITHUB_STEP_SUMMARY
        else
          echo "🚀 Triggered by: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        fi
